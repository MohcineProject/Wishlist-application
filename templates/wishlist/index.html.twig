{# Created by Mohcine Zahdi and Othmane Mounouar #}
{% extends 'base.html.twig' %}



{% block title %} My Wishlists {% endblock %}



{% block body  %} 
{% block stylesheets %}

{{parent()}}

<style> 

.popup-box {
    display: none; 
    position: fixed; 
    z-index: 1000;
    background-color: #fff;
    padding: 15px;
    border: 1px solid #ccc;
    border-radius: 6px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    width: 220px;
}

.popup-box .close {
    position: absolute;
    top: 5px;
    right: 8px;
    font-size: 18px;
    cursor: pointer;
}

.popup-box .content {
    text-align: center;
    margin-top: 20px;
}


.sub-header {
    background : #00B8DE  ; 
    padding : 20px ;
    display: flex;
    flex-direction: row-reverse;
    
}

header {
    display: flex;
    align-items: center;
    background: #14223c;
    color: white;
    padding: 10px;
    gap: 15px;
}

body {
    background : #EDF3F4 ; 
}

.add-wishlist-btn{
    background: #14223c;
    
}

a {

    text-decoration:none ;
}
button > a {
    color : #000000; 
}

.add-wishlist-btn > a  { 
    color : #EDF3F4 ; 
}

a:hover{
    color : #EDF3F4 ; 
}

.wishlist > a {
    color: #00B8DE;
}
{% endblock %}

</style>

<header>
    <div class="user-icon"></div>
    <h1>My Wishlists</h1>
    <input type="text" class="search-bar" placeholder="Search...">
</header>

<div class="sub-header">
<button  class="add-wishlist-btn"> <a href="{{ path('app_wishlist_new') }}"> Add wishlist</a> </button>
</div>

<div class="container">
    {% for wishlist in wishlists %}
    <div class="wishlist">
        <a href="{{ path('app_wishlist_show', { 'id': wishlist.id }) }}">
            {{ wishlist.name }}
        </a>
        <div class="wishlist-items">
            {% for item in wishlist.items %}
            <div class="wishlist-item">üì∑</div>
            {% endfor %}
        </div>
        <p class="wishlist-footer">{{ wishlist.deadline | date('F j, Y') }}</p>
        
        <!-- Share Button -->
        <button title="Share wishlist" type="button" class="share-btn" data-wishlist-id="{{ wishlist.id }}">‚Üó</button>

        <button title="Edit wishlist"><a href="{{ path('app_wishlist_edit', { 'id': wishlist.id }) }}">‚úè</a></button>
        <form action="{{ path('app_wishlist_delete', {'id': wishlist.id}) }}" method="POST" style="display: inline-block">
            <input type="hidden" name="_method" value="DELETE"> 
            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ wishlist.id) }}"> 
            <button type="submit" title="Delete wishlist">üóë</button>
        </form>
    </div>
    {% endfor %}
</div>

<!-- Popup Box -->
<div id="popup-box" class="popup-box">
    <span class="close">&times;</span>
    <h4>Share Wishlist</h4>
    <div class="content">
        <button id="invite-co-worker">Invite a Co-Worker</button>
        <br><br>
        <button id="share-wishes">Share Your Wishes!</button>
    </div>
</div>
<script>
document.addEventListener("DOMContentLoaded", function () {
    const shareButtons = document.querySelectorAll(".share-btn");
    const popupBox = document.getElementById("popup-box");
    const closeBtn = popupBox.querySelector(".close");
    let selectedWishlistId = null;

    // Helper function to handle the URLs
    function handleUrlButton(button, urlPath, dataAttr, buttonCopyText, successAlertText, failureAlertText) {
        if (button.hasAttribute(dataAttr)) {
            // If the URL exists, copy it.
            const url = button.getAttribute(dataAttr);
            navigator.clipboard.writeText(url)
                .then(() => {
                    alert("URL was copied to clipboard successfully!");
                    popupBox.style.display = "none";
                })
                .catch(error => {
                    console.error("Clipboard write failed:", error);
                    alert("Failed to copy URL to clipboard.");
                });
        } else {
            // Fetch the URL otherwise
            fetch(urlPath, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ wishlist_id: selectedWishlistId })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }
                return response.json();
            })
            .then(responseData => {
                if (responseData.joint_creation_URL) {
                    // Save URL in a data attribute and change button text.
                    button.setAttribute(dataAttr, responseData.joint_creation_URL);
                    button.textContent = buttonCopyText;
                    alert(successAlertText);
                } else {
                    alert(failureAlertText);
                }
            })
            .catch(error => {
                console.error("Error:", error);
                alert("Failed to send invitation.");
            });
        }
    }

    // Reset buttons state when a share button is clicked.
    shareButtons.forEach(button => {
        button.addEventListener("click", function () {
            selectedWishlistId = this.dataset.wishlistId;
            // Reset both buttons.
            const inviteButton = document.getElementById("invite-co-worker");
            inviteButton.textContent = "Invite a Co-Worker";
            inviteButton.removeAttribute("data-invite-url");

            const shareWishesButton = document.getElementById("share-wishes");
            shareWishesButton.textContent = "Share Your Wishes";
            shareWishesButton.removeAttribute("data-share-url");

            const rect = this.getBoundingClientRect();
            popupBox.style.left = `${rect.left}px`;
            popupBox.style.top = `${rect.top + rect.height + 8}px`;
            popupBox.style.display = "block";
        });
    });

    // Close popup when the close button is clicked.
    closeBtn.addEventListener("click", function () {
        popupBox.style.display = "none";
    });

    // Close the popup if clicking outside.
    window.addEventListener("click", function (event) {
        if (!popupBox.contains(event.target) && !event.target.classList.contains("share-btn")) {
            popupBox.style.display = "none";
        }
    });

    // Event listener for the Invite button.
    document.getElementById("invite-co-worker").addEventListener("click", function () {
        handleUrlButton(
            this,
            "{{ path('app_invitation_new') }}",
            "data-invite-url",
            "Copy Invite URL",
            "Invite URL generated. Click the button again to copy it.",
            "Failed to generate invite link."
        );
    });

    // Event listener for the Share Your Wishes button.
    document.getElementById("share-wishes").addEventListener("click", function () {
        handleUrlButton(
            this,
            "{{ path('app_gifts_purchase_new') }}",
            "data-share-url",
            "Copy Share URL",
            "Share URL generated. Click the button again to copy it.",
            "Failed to generate share link."
        );
    });
});
</script>



{% endblock %}
